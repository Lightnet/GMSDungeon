<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// create level
// resize room
room_width = (CELL_WIDTH/16) * 720;
room_height = (CELL_HEIGHT/16) * 720;

//set the grid and height
var width = room_width div CELL_WIDTH;
var height = room_height div CELL_HEIGHT;

//create the grid
grid = ds_grid_create(width, height);

//fill the grid with the void
ds_grid_set_region(grid, 0, 0, width - 1, height - 1, VOID);

// randomize the world
randomize();

//create the controller in the center of the grid
var cx = width div 2;
var cy = height div 2;

// give the controller a random direction
var cdir = irandom(3);

// the odds of variable for chaning the direction
var odds = 1;

//create the level using 1000 step
repeat(1000){
    //place a floor tile at the controller position
    grid[# cx, cy] = FLOOR;
    //ds_grid_set(grid, cx, cy, FLOOR);
    
    //randomize the direction of the controller
    if(irandom(odds) == odds){
        cdir = irandom(3);
    }

    //move the contoller
    var xdir = lengthdir_x(1,cdir*90);
    var ydir = lengthdir_y(1,cdir*90);
    
    cx += xdir;
    cy += ydir;
    
    //make sure we don't move out the grid
    cx = clamp(cx, 1, width - 2);
    cy = clamp(cy, 1, height - 2);
}

//add the walls
for(var yy = 1;yy &lt; height - 1;yy++){
    for(var xx = 1;xx &lt; width - 1;xx++){
        if(grid[# xx,yy] == FLOOR){
            if(grid[# xx+1, yy] != FLOOR){grid[# xx+1, yy] = WALL;}
            if(grid[# xx-1, yy] != FLOOR){grid[# xx-1, yy] = WALL;}
            if(grid[# xx, yy+1] != FLOOR){grid[# xx, yy+1] = WALL;}
            if(grid[# xx, yy-1] != FLOOR){grid[# xx, yy-1] = WALL;}
        }    
    }
}

//draw the level using the grid
for(var yy = 0;yy &lt; height;yy++){
    for(var xx = 0;xx &lt; width; xx++){
        if(grid[# xx,yy] == FLOOR){
            //draw the floor
            tile_add(bg_floor, 0,0, CELL_WIDTH, CELL_HEIGHT,xx*CELL_WIDTH,yy*CELL_HEIGHT,0);
        }else if (grid[# xx,yy] == WALL){
            tile_add(bg_wall, 0,0, CELL_WIDTH, CELL_HEIGHT,xx*CELL_WIDTH,yy*CELL_HEIGHT,0);    
        }else{
    
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// restart the room
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
